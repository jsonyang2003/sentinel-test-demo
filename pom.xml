<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.json.sentinel</groupId>
	<artifactId>json-sentinel</artifactId>
	<version>1.1.0</version>
	<name>sentinel-json-demo</name>

	<properties>
		<!-- must need 控制台和应用通信用fastjson序列化 需要和控制台保持大版本一致 -->
		<fastjson.version>1.2.83_noneautotype</fastjson.version>
		<!-- infloww 目前用的是 2.4.13 可用内部parent版本即可 当前版本的sentinel 经测试支持 2.5.x版本 其他版本未测试 -->
		<spring-boot.version>2.4.13</spring-boot.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<apollo.version>2.0.1</apollo.version>
	</properties>

	<dependencies>


       <dependency>
			<groupId>com.infloww</groupId>
			<artifactId>infloww-health</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.22</version>
		</dependency>

	    <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
			<version>${spring-boot.version}</version>
		<exclusions>
	        <exclusion>
	          <artifactId>spring-boot-starter-logging</artifactId>
	          <groupId>org.springframework.boot</groupId>
	        </exclusion>
	      </exclusions>
		</dependency>

		
		<dependency>
	      <groupId>org.springframework.boot</groupId>
	      <artifactId>spring-boot-starter-web</artifactId>
	      <version>${spring-boot.version}</version>
	      <exclusions>
	        <exclusion>
	          <artifactId>spring-boot-starter-logging</artifactId>
	          <groupId>org.springframework.boot</groupId>
	        </exclusion>
	      </exclusions>
	    </dependency>
	    
     <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-log4j2</artifactId>
        <version>${spring-boot.version}</version>
    </dependency>
    
      <!-- apollo客户端
		<dependency>
			<groupId>com.ctrip.framework.apollo</groupId>
			<artifactId>apollo-client</artifactId>
			<version>${apollo.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>guava</artifactId>
					<groupId>com.google.guava</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.ctrip.framework.apollo</groupId>
			<artifactId>apollo-openapi</artifactId>
			<version>${apollo.version}</version>
		</dependency>
       -->

	</dependencies>

	<build>
		<finalName>root</finalName>
		<plugins>
			<!-- spring-boot-maven-plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<!-- devtools -->
				<configuration>
					<fork>true</fork>
				</configuration>
			</plugin>
			<!-- docker -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<configuration>
					<!-- made of '[a-z0-9-_.]' -->
					<imageName>${project.artifactId}:${project.version}</imageName>
					<dockerDirectory>${project.basedir}</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>